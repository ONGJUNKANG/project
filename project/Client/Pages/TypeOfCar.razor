@page "/TypeOfCar/"
@inject NavigationManager NavigationManager
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3>TypeOfCars</h3>
<hr />
<br />

<EditForm Model="@bookingd" OnValidSubmit="CreateBookingDetail">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>TypeOfVehicle: </label>
        <div>
            <InputSelect @bind-Value="bookingd.TypeOfVehicleId" class="form-control">
                <option value="">-- Select TypeOfVehicle --</option>
                @if (typeofVehicle != null)
                {
                    foreach (var typeofvehicle in typeofVehicle)
                    {
                        <option value="@typeofvehicle.Id">@typeofvehicle.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => bookingd.TypeOfVehicleId)" />
        </div>
    </div>
    <div class="form-group">
        <label>TypeOfVehicle: </label>
        <div>
            <InputSelect @bind-Value="bookingd.PriceId" class="form-control">
                <option value="">-- Select TypeOfVehicle --</option>
                @if (typeofVehicle != null)
                {
                    foreach (var price in typeofVehicle)
                    {
                        <option value="@price.Id">@price.Price</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => bookingd.PriceId)" />
        </div>
    </div>
    <div class="form-group">
        <label>Destination: </label>
        <div>
            <InputText @bind-Value="@bookingd.Destination" class="form-control" />
            <ValidationMessage For="@(() => bookingd.Destination)" />
        </div>
    </div>
    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputText @bind-Value="@bookingd.Address" class="form-control" />
            <ValidationMessage For="@(() => bookingd.Address)" />
        </div>
    </div>
    <div class="form-group">
        <label>Amount of Passenger: </label>
        <div>
            <InputNumber @bind-Value="@bookingd.Passenger" class="form-control" />
            <ValidationMessage For="@(() => bookingd.Passenger)" />
        </div>
    </div>
    <div class="form-group">
        <label>Amount of Passenger: </label>
        <div>
            <InputNumber @bind-Value="@bookingd.luggage" class="form-control" />
            <ValidationMessage For="@(() => bookingd.luggage)" />
        </div>
    </div>
    <div class="form-group">
        <label>Date: </label>
        <div>
            <InputDate @bind-Value="@bookingd.Date" class="form-control" />
            <ValidationMessage For="@(() => bookingd.Date)" />
        </div>
    </div>
    <div class="form-group">
        <label>Time: </label>
        <div>
            <InputDate @bind-Value="@bookingd.Time" class="form-control" />
            <ValidationMessage For="@(() => bookingd.Time)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Payment
    </button>
</EditForm>


@if (typeOfVehicle == null)
{
    <div class="alert alert-info">Loading Vehicles...</div> }

else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Type Of Vehicle</th>
                <th>Seat</th>
                <th>Capacity</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var vehicle in typeOfVehicle)
            {
                <tr>
                    <td>@vehicle.Name</td>
                    <td>@vehicle.TypeOfVehicles</td>
                    <td>@vehicle.Seat</td>
                    <td>@vehicle.Capacity </td>
                    <td>@vehicle.Price</td>

                    <td>
                        <a href="/vehicles/view/@vehicle.Id" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>}
@code {
    private List<TypeOfVehicle> typeOfVehicle;

    protected async override Task OnInitializedAsync()
    {
        typeOfVehicle = await _client.GetFromJsonAsync<List<TypeOfVehicle>>($"{Endpoints.TypeOfVehiclesEndpoint}");
        typeofVehicle = await _client.GetFromJsonAsync<List<TypeOfVehicle>>($"{Endpoints.TypeOfVehiclesEndpoint}");
    }

    VehicleBooking bookingd = new VehicleBooking();

    private IList<TypeOfVehicle> typeofVehicle;

    private async Task CreateBookingDetail()
    {
        await _client.PostAsJsonAsync(Endpoints.BookingdetailEndpoint, bookingd);
        NavigationManager.NavigateTo("/payment");

    }

    private void Car(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("Car");
    }
    private void Payment(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("Payment");
    }
}
